par_verbose = 1;
mylhcbeam = 1;


        ! Specify machine version
        ver_lhc_run = 0;
        ver_hllhc_optics = 1.4;

        ! Get the toolkit
        call, file="/afs/cern.ch/eng/lhc/optics/HLLHCV1.4/toolkit/macro.madx";


        ! Build sequence
        option, -echo,-warn,-info;
        if (mylhcbeam==4){
          call,file="/afs/cern.ch/eng/lhc/optics/runIII/lhcb4.seq";
        } else {
          call,file="/afs/cern.ch/eng/lhc/optics/runIII/lhc.seq";
        };
        option, -echo, warn,-info;

        !Install HL-LHC
        call, file="/afs/cern.ch/eng/lhc/optics/HLLHCV1.4/hllhc_sequence.madx";


        ! Slice nominal sequence
        exec, myslice;

        ! Install placeholder elements for errors (set to zero)
        call, file="errors/HL-LHC/install_MQXF_fringenl.madx";    ! adding fringe place holder
        call, file="errors/HL-LHC/install_MCBXFAB_errors.madx";   ! adding D1 corrector placeholders in IR1/5 (for errors)
        call, file="errors/HL-LHC/install_MCBRD_errors.madx";     ! adding D2 corrector placeholders in IR1/5 (for errors)

        !Cycling w.r.t. to IP3 (mandatory to find closed orbit in collision in the presence of errors)
        if (mylhcbeam<3){
          seqedit, sequence=lhcb1; flatten; cycle, start=IP3; flatten; endedit;
        };
        seqedit, sequence=lhcb2; flatten; cycle, start=IP3; flatten; endedit;
        ;
exec, twiss_opt;
call, file="/afs/cern.ch/eng/lhc/optics/HLLHCV1.4/round/opt_round_150_1500_thin.madx";
nrj = 7000;

    beam, particle=proton,sequence=lhcb1,
        energy=7000,
        sigt=0.076,
        bv=1,
        npart=220000000000.0,
        sige=0.00011,
        ex=3.350971743428571e-10,
        ey=3.350971743428571e-10,
    ;

    beam, particle=proton,sequence=lhcb2,
        energy=7000,
        sigt=0.076,
        bv=-1,
        npart=220000000000.0,
        sige=0.00011,
        ex=3.350971743428571e-10,
        ey=3.350971743428571e-10,
    ;
